# -*- coding: utf-8 -*-
"""Placement.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xj85YqotRRN8r0E8xjBbiHYlodqjqMs5
"""

n = int(input("Enter the size of the pattern: "))

for i in range(n):
    for j in range(n):                                                                                                                              # This ---
        if (i == 0 and (j > 0 and j < n-1)) or (i == n-1 and (j > 0 and j < n-1)) or (i > 0 and i < n-1 and j == 0) or (i == n-1 and j == n-1) or (i == n//2 and j >=n//2) or (i > n//2 and i < n-1 and j == n-1):
            print("*", end=" ")
        else:
            print(" ", end=" ")
    print()

n = int(input("Enter the size of the pattern: "))

for i in range(n):
    for j in range(n):                                                                                                                              # This ---
        if (i == 0 ) :#or (i == n-1 and (j > 0 and j < n-1)) or (i > 0 and i < n-1 and j == 0) or (i == n-1 and j == n-1) or (i == n//2 and j >=n//2) or (i > n//2 and i < n-1 and j == n-1):
            print("*", end=" ")
        else:
            print(" ", end=" ")
    print()

n=int(input())
for i in range(n):
    for j in range(n-2):
        if (i==0 and (j==0 or j==(n-2-1))):
            print(' ',end=' ')
        elif( (j==0 or j==(n-2-1)) or (i==0 or i==(n//2))) :
            print('*',end=' ')
        else:
            print(' ',end=' ')
    print()

n=int(input())
for i in range(n):
    for j in range(n-2):
        if ((j==n-2-1)):
            print(' ',end=' ')
        elif(i==n-1 and j==n-2-1):
            print(' ',end=' ')
        elif( (j==0 or j==(n-2-1)) or (i==0 or i==(n//2)) or (i==n-1)) :
            print('*',end=' ')
        else:
            print(' ',end=' ')
    print()

n=int(input())
for i in range(n):
    for j in range(n-2):
        if (i==0 and (j==n-2-1)):
            print(' ',end=' ')
        elif(i==n-1 and j==n-2-1):
            print(' ',end=' ')
        elif( (j==0 or j==(n-2-1)) or (i==0 or i==(n//2)) or (i==n-1)) :
            print('*',end=' ')
        else:
            print(' ',end=' ')
    print()

n=int(input())
for i in range(n):
    for j in range(n):
        if((i==0 or i==n//2) or (j==0)):
            print('*',end=' ')
        else:
            print(' ',end=' ')
    print()

n=int(input())
for i in range(n):
    for j in range(n-2):
        if (i==0 and (j==n-2-1)):
            print(' ',end=' ')
        elif(i==n-1 and j==n-2-1):
            print(' ',end=' ')
        elif( (j==0 or j==(n-2-1)) or (i==0 ) or (i==n-1)) :
            print('*',end=' ')
        else:
            print(' ',end=' ')
    print()

n=int(input())
for i in range(n):
    for j in range(n-2):
        if ((i==0 or i==n-1) and (j==0 or j==(n-2-1))):
            print(' ',end=' ')
        elif(i==n-1 and j==n-2-1):
            print(' ',end=' ')
        elif( (j==0 or j==(n-2-1)) or (i==0 ) or (i==n-1)) :
            print('*',end=' ')
        else:
            print(' ',end=' ')
    print()

row=int(input())
for i in range(row):
  for j in range(row-2):
    if j==0 or j==row-2 or i==0 or i==(row-1) or i==row//2:
      if(i==0 or i==row//2 or i==row-1) and j==row-1:
        print(' ',end=' ')
      else:
        print('*',end=' ')
  print()

row=int(input())
for i in range(row):
  for j in range(row-2):
    if i==0 or i==row-1 or j==0:
      if(i==0 or i==row-1) and j==0:
        print(' ',end=' ')
      else:
        print('*',end=' ')
  print()

row=int(input())
for i in range(row):
  for j in range(row-2):
    if i==0 or i==row-1 or j==0 or j==row-2-1:
      if (i==0 or i==row-1) and j==row-2-1:
        print(' ',end=' ')
      else:
        print('*',end=' ')
    else:
      print(' ',end=' ')
  print()

row=int(input())
for i in range(row):
  for j in range(row-2):
    if j==0 or i==0 or i==row//2 or i==row-1:
      print('*',end=' ')
    else:
      print(' ',end=' ')
  print()

row=int(input())
temp=1
for i in range(row):
  print(' '*(row-1-i),end=' ')
  print('*'*temp)
  temp+=2

n=int(input())
for i in range(n):
    for j in range(n):
        if(i==n//2 or (j==0 or j==n-1)):
            print('*',end=' ')
        else:
            print(' ',end=' ')
    print()

n = int(input())
for i in range(n):
    for j in range(n):
        if ( (i==0 or i==n-1 or i== n//2) or (i<n//2 and j==0)  or (i>n//2 and j==n-1) ):
            print("*", end=" ")
        else:
            print(" ", end=" ")
    print()

n=int(input())
for i in range(n):
    for j in range(n-2):
        if ((i==0 or i==n-1) and (j==0 or j==(n-2-1))):
            print(' ',end=' ')
        elif(i==n-1 and j==n-2-1):
            print(' ',end=' ')
        elif( (j==0 or j==(n-2-1)) or (i==0 ) or (i==n-1)) :
            print('*',end=' ')
        else:
            print(' ',end=' ')
    print()

"""Bitwise operators"""

2&3

8|4

~6

7>>2  #left_shift

2<<2 #right_shift

"""Multiply"""

a=int(input())
b=int(input())
ans=0
for i in range(a+1):  # OR for i in range(1,a+1):  (avoid ans-=b)
  ans+=b
ans-=b
print(ans)

"""Divide"""

a=int(input())
b=int(input())
count=0
ans=0
if a<b:
  print(0)
else:
  for i in range(1,a+1):
    while a>=0:
      a-=b
      count+=1
  count-=1
  print(count)

"""Add"""

a=int(input())
b=int(input())
count=0
ans=0
for i in range(1,a+1):
  count+=1
b+=count
print(b)

"""Subtract"""

a=int(input())
b=int(input())
c=max(a,b)
d=min(a,b)
count=0
ans=0
for i in range(1,d+1):
  count+=1
c-=count
print(c)

nums = (55, 44, 33, 22)
print(max(min(nums[:2]), abs(-42)))

"""Divide (NOT MY METHOD)"""

a=int(input())
b=int(input())
temp=0
rem=a%b
for i in range(a):
  temp=(i*b) + rem
  if temp==a:
    print(i)
    break

def my_func(f, arg):
  return f(arg)

my_func(lambda x: 2*x*x, 5)

def apply_twice(func, arg):
   return func(func(arg))

def add_five(x):
   return x + 5

print(apply_twice(add_five, 10))

#named function
def polynomial(x):
    return x**2 + 5*x + 4
print(polynomial(-4))

#lambda
print((lambda x: x**2 + 5*x + 4) (-4))

a=int(input())
b=int(input())
print(f'Subtraction of {a} and {b} is:', a + ~b + 1)

n=int(input())
for i in range(n):
  for j in range(n):
    if (i==n//2 or j==n//2):
      print('*', end=' ')
    elif (i>=n//2 or i<=n//2):
      print('*', end=' ')
    else:
      print(' ',end=' ')
  print()

n=int(input())
for i in range(n):
  for j in range(n):
    if (i==n//2 or j==n//2):
      print('*', end=' ')
    elif ((i>=n//2 or i<=n//2) and (j>=n//2 or j<=n//n)):
      print('*', end=' ')
    else:
      print(' ',end=' ')
  print()

print('\')

print('Hi\\wow')

print('Hi \\ wow')

print('Hi \ \ wow')

print(10_00_00_000)

str=input()
print(str.capitalize())
print(str.title())

"""To check duplicates"""

str=input()
dup=[]
count=str.count(str[0])
for i in str:
  if str.count(i)>=2:
    dup.append(i)
print('Duplicates :',dup)
print('All duplicates using * :',*dup) # Simple than for_loop
print('Duplicates into a tuple :',tuple(dup))
print('Duplicates into a tuple using *:',*tuple(dup))
for each in dup:
  print('By loop :',each,'\t',end=' ')

def sum(a=10,b=6):
  return a+b
n=int(input())
m=int(input())
print(sum(m,n))
print(sum()) # Default values

"""Fibonacci series"""

n=int(input("Enter the no.of Fibonacci series : "))
def fibo(n):
  a=0
  b=1
  list1=[0,1]
  if n==0:
    return 0
  elif n==1:
    return list2
  else:
    for i in range(2,n):
      c=a+b
      a=b
      b=c
      list1.append(c)
    return list1      # return c,list1 ==> (13,[0,1,1,2,3,5,8,13])
print(f'Fibonacci series upto {n} series :',fibo(n))

n=int(input("Enter the no.of Fibonacci series : "))
a=0
b=1
c=0
for i in range(1,n+1):
  print(c,end=' ')
  c=a+b
  b=a
  a=c

n=int(input("Enter the no.of Fibonacci series : "))
def fibo(n):
  a=0
  b=1
  c=0
  for i in range(1,n+1):
    print(c,end=' ')
    c=a+b
    b=a
    a=c
  return c
print('\n',f'Fibonacci series upto {n} series :',fibo(n))

a=input('Enter a string : ')
def count(a):
  for i in a:
    count=0
    for j in a:
      if i==j:
        count+=1
    print(i,count)
print(count(a))

a=input('Enter a string : ')
for i in a:
    count=0
    for j in a:
      if i==j:
        count+=1
    print(i,count,sep='',end='')

b=input("Enter a string : ")
word=''
for i in b:
  if i==' ':
    print(word)
    word=''
  else:
    word+=i
print(word)

b=input("Enter a string : ")
for i in b:
  if i==' ':
    print()
  else:
    print(i,end='')

b=input("Enter a string : ")
print(b.split('\t'))

n=int(input('Enter n numbers count : '))
sum=0
for i in range(1,n+1):
  sum+=i
print(sum)

"""Recursion --- (has base case and a recursive case)"""

n1=int(input())
def sum_n_num(n1):
  if n1==0:
    return 0
  return n1 + sum_n_num(n1-1) # Recursion
print(sum_n_num(n))

"""Recursion - Factorial"""

n=int(input())
def fac(n):
  ans=1
  if n>0:
    ans=n*fac(n-1)
  return ans
print(fac(n))

"""Recursion - Square of numbers"""

n=int(input())
def sqr(n):
  if n==0:
    return 0
  else:
    return n*n
  return n*sqr(n)
print(sqr(n))

"""Recursion - Fibonacci"""

n=int(input())
def fib(n):
  a=0
  b=1
  c=0
  d=[0,1]
  if n==0:
    return 0
  elif n==1:
    return d
  elif n>0:
    c=a+b
    b=a
    a=c
    d.append(c)
  return
print(fib(n))

"""Functional programming"""

def main():
  n=int(input())
  result=fib(n)
  print('The %dth no. in fibonacci series : %d' % (n,result)) # d-integer  f-float   s-string
def fib(e):
  if e<=1:  # Base case
    return e
  return fib(e-1) + fib(e-2)  # 2 recursive cases
main()

def main():
  n=int(input('Enter the nth position for fibonacci : '))
  result = fibonacci_num(n)
  print('The %fth number in fibonacci series is : ' % n)
  print('The %sth number in fibonacci series is : %s' % (n,result))
def fibonacci_num(n_elem):
  if n_elem <= 1:
    return n_elem
  return fibonacci_num(n_elem-1)+fibonacci_num(n_elem-2)
main()

def fact(fac):
    if fac == 0:
        return 1
    else:
      return fac*fact(fac-1)
def comb(string,r,comb_str = '',k=0):
    if r == 0:
        print(comb_str)
        return
    for i in range(k,len(string)):
        comb(string,r-1,comb_str + string[i],i+1)
string = input('Enter a string : ')
n = len(string)
for r in range(1,n+1):
    nc = fact(n) // fact(r) * fact(n-r)
    print('No.of possible combinations of %d length = %d' % (r,nc))
    comb(string,r)

import re
for _ in range(int(input())):
    ans = True
    try:
        reg = re.compile(input())
    except re.error:
        ans = False
    print(ans)

year=int(input('Enter the year : '))
def leap(n):
  a='Leap year'
  b='Not a leap year'
  if n%4==0: # n%4==0 and n%100!=0 --- leap yr , n%100==0 and n%400==0 -- leap , else : not
    return a
  else:
    return b
print(leap(year))

def sort_lst(n):
  n=int(input('Enter the no.of elements of the list : '))
  lst=[]
  for i in range(n):
    e=int(input('Enter the list element : '))
    lst.append(e)
  lst.sort()
  return lst
print(sort_lst(n))

word=input()
def str_count(n):
  a=''
  for i in word:
    count=0
    for j in word:
      if i==j:
        count+=1
    print(i,count,sep='',end='')
  return a
print(str_count(word))

word=input()
word2=''.join([i + str(word.count(i)) for i in word])
print(word2)

input_str = input("Enter a string: ")

output_str = ""
count = 1

for i in range(len(input_str)):
    if i < len(input_str) - 1 and input_str[i] == input_str[i + 1]:
        count += 1
    else:
        output_str += input_str[i] + str(count)
        count = 1

print("Output:", output_str)

word=input()
count=1
for i in range(0,len(word)):
  for j in range(i+1,len(word)-1):
     if word[i]==word[j]  :
       count+=1
     else:
        count=1
  print(word[i],count,sep='',end='')

a = input()
count = 1

for i in range(len(a)):
    if i < len(a) - 1 and a[i] == a[i + 1]:
        count += 1
    else:
        print(a[i] + str(count), end='')
        count = 1

print()

def compress_string(string):
  compressed=''
  count=1
  prev_char=string[0]
  for i in range(1,len(string)):
    if string[i]==prev_char:
      count+=1
    else:
      compressed+=(prev_char + str(count)) * count
      count=1
      prev_char=string[i]
  compressed+=(prev_char + str(count)) * count
  return compressed
string=input('Enter the string : ')
compressed_string=compress_string(string)
print('compressed_string : ', compressed_string)

"""List sort without sort()"""

l1=[5,90,32,91,33,1,5,67,25,23,14,56,34]
for i in range(len(l1)):
  for j in range(i,len(l1)):
    if l1[i]>=l1[j]:
      #temp=l1[i]
      #l1[i]=l1[j]
      #l1[j]=temp
      l1[i], l1[j] = l1[j], l1[i]
print(l1)

count=int(input('Enter the no.of elements in the list : '))
l1=[]
for i in range(count):
  l=int(input('Enter the list element : '))
  l1.append(l)
  l1.sort()
print(l1)